DB : 자료를 영구적으로 저장한다. ( *** )
DB : 정형 데이터 베이스 & 비정형 데이터 베이스

=========================================================

관계형 데이터베이스: ( *** )
관계형 데이터베이스 : 표를 만들어서 저장한다.
	도구 : Oracle, MySQL, MariaDB, MSsql

관계형 데이터베이스의 용어 : 
1. 릴레이션(테이블) ---> 테이블 전체. ---> 릴레이션은 행과열로 만들었다.
2. 행 : row (로우) : 저장할 대상의 자료.
3. 열 : 컬럼. ( 속성(타입), 제약조건 )

1. 릴레이션으로 데이터를 저장하는 것이 관계형 데이터베이스 이다.
2. 릴레이션은 행과 열로 구성되었다.

==========================================================
ex : 번호라는 컬럼의 속성 : 숫자.
      이름 : 문자.
      나이 : 문자. ( 나이 컬럼은 사칙연산할 필요가 없으니 문자가 좋다. ) 
      주소 : 문자.
      전화번호 : 숫자 ( 사칙연산이 필요하면 숫자로, 필요 없으면 문자로. )

		번호			이름	나이	주소	성별 ---- 고객의 정보를 구체화 시킨다.
		1			홍길동	37	수원	
		2			김길수	25	서울	2222
		3			홍길순	34	대전	3333
		3(무결성위배**)		박기수    34	서울

	// 이 릴레이션은 속성(컬럼)이 5개 있다. ( *** )

컬럼 : 
1. 컬럼은 의미를 가지고 있다.
2. 컬럼은 속성을 지정할 수 있다.
3. 컬럼에 속성을 기입하면서 제약조건도 걸수 있다. ( not null, unique, check ... )
4. 컬럼은 속성과 제약조건이 있다.
5. 속성에 따른 제약조건이 있다.
6. 컬럼에 unique 속성은 반드시 있어야한다.
7. unique 옵션을 언제 사용하면 좋을지 생각.
8. key : 특정 컬럼에게 직무를 부여한다.
9. 테이블을 만든다는 것은 컬럼을 만든다는 것이다.


제약조건 : 
1. not null : 특정 열에 데이터의 중복 여부와는 상관없이 null를 저장할 수 없다.
2. unique : 유일한 값을 가지며, 중복할 수 없다. 단 null은 제외.
3. check : 설정한 조건식을 만족하는 데이터만 입력 가능합니다.	 gender varchar2(1) check (gender in ('M','F')); 


명령어 : 
1. select * from aaa;     		로우를 확인한느 명령어.
2. insert into aaa values (1, 'k');	로우에 값을 입력하는 명령어.
3. create table aaa(			테이블을 만드는 명령어.
	no number,		no 컬럼의 속성 : number
	name varchar2(2)		name 컬럼의 속성 : varchar2
   );
4. desc aaa;			현재 만들어진 테이블의 구조를 확인하는 명령어.
5. alter table : 			데이블에 세 컬럼 추가, 삭제, 컬럼의 자료형또는 길이 변겅시 사용.
	1. 테이블에 컬럼 추가(ADD) : 	alter table 테이블명 add 추가할 컬럼 속성;		        		ex : alter table aaa add 성별 varchar2(2);
	2. 컬럼명 변경(RENAME) : 		alter table 테이블명 rename column 원 컬럼명 to 세 컬럼명. 	            ex : alter table aaa rename column 번호 to 회원번호;
	3. 컬럼의 자료형 변경(MODIFY) : 	alter table 테이블명 modify 변경할 컬럼명 변경할 자료형.                          ex : alter table aaa modify name varchar2(5);
	4. 컬럼 삭제(DROP) :		alter table 테이블명 drop column 삭제할 컬럼.		                         ex : alter table aaa drop no;


논리적 모델링 : 테이블명세서.
물리적 모델링 : 실제로 만든 테이블.


속성 : 
	한글 2byte,  숫자 & 영어 1byte.
1. 숫자 : 
	number(숫자의 자릿수);
	ex : number(3) : 3자리 숫자를 입력한다. 
	number ( p, s )  : p는 소수점을 포함한 전체 자릿수를 의미하고, s는 소수점 자릿수를 의미한다.
	ex : number( 5,2 ) : 숫자3자리와 소수점2째자리 까지. ( 검색어 : 오라클 실수형 타입. )

2. 문자 : 
	varchar2( 원하는 글자수 ) 
	ex : 아이디는 9글자입니다. ---> varchar2(9);
	

=================================================================================
심화 내용 : 
1. 특정 형식으로 날짜 정보 : ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD HH24:MI:SS';


테이블을 만들때 테이블명세서를 꼭 만들것!
테이블명 : member00
컬럼 : 	 empno		ename		sal		gender		epoint
컬럼의미: 직원번호		직원이름		직원월급		성별		포인트
속성 : 	 number(4)	varchar2(10)	number(5)	varchar2(1)	number(3)
제약조건 : unique		not null		check		check


2. 컬럼을 합치는 방법 :
1. concat : concat 함수를 사용하여 3개 이상의 문자열을 합칠경우 가독성이 떨어진다.
concat( 컬럼1, 컬럼2 );		컬럼1컬럼2
concat( concat( 컬럼1, '+' ), 컬럼2 );    컬럼1 + 컬럼2
2. "||" : "||"를 사용할 경구 가독성이 좋다. ( 코드작성 편하다. )
select 컬럼1 || 컬럼2 from table;

3. 테이블 내용 업데이트 : 
UPDATE [테이블] SET [열] = '변경할값' WHERE [조건]
출처: https://121202.tistory.com/28 [방구석:티스토리]




