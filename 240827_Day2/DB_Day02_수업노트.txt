CRUD ( ****** )
기능을 정확하게 구현할 수 있는가? ***
테이블이라는 저장소에 curd 작업을 한다.
보여주는게 view라고 한다.
1. 로우를 insert 하는게 c
2. 로우를 select r
3. 로우를 update u
4. 로우를 delete d

게시판
1. 글쓰기 : c
2. 글수정 : u
3. 글삭제 : d
4. 검색 : r
5. 전체보기 : r
6. 좋아요 : c
7. 추천하기 : c

상품 입력 / 수정 / 삭제 / 검색 / 찜하기...

=====================================
정형/비정형의 치이는 형태가 있는냐의 차이이다.
형태가 정해겨 있고 형태중 하난가 태이블이다.
정형테이터의 사용되는 프로그렘은 oracle ... 이 있다
행 : row --> crud랑 관련있고
열 : column ---> 속성 & 제약조건을 구려한다.

key :컬럼의 부여하는 가능.
1. 기본키 : 
특징 : 튜플(row)를 유일하게 식별할 수 있으며.
기본키를 index(색인)을 형성하여,저장한다.
기본키는 null이불가하다. --> not null 제약조건을 포함하고 있다.
속성은 제약조건을 갓는다.
컬럼의 제약조건을 단다랑 컬럼의 기능을 다는거랑은 다른 말이다.
index는 검색속도의 향상돤다.

member 
이름	주소	전화변호
홍길동    서울	1111
일치매	서울	1111
홍길동	수원	2222

문제 : 화사는 자동차를 등록한다 한사람이 여려대를 등록한다.
이름 	자량번호		
홍길동 	1111
홍길동 	2222
홍길동 	3333
일치매	
c : 데이터의 신뢰도
u : 홍씨의 전화변호를 4444로 바꿀때.
d : 홍씨를 삭제할때 
update혹은 delete엑션일 경우 로우을 유일하게 식별하지 못하는 문제가 발생한다.
update 할때 겡신 이상 현상이 발생할 수 있다 ---> 원인 튜필을 유일하게 식별할 수 없기때문.
delete  할때 삭제 이상현사인 발생합니다. ---> 튜필을 유일하게 식별할 수 없기때문.

id를 unique 하게 설정하면 갱신 / 삭제 이상 현상을 막을 수 있다.
1. 튜플을 유일하게 식별 *****
2. 쿼리는 속도가 빠르야된다!! --> 현업에 있는 쿼리만 참조하면 된다.
3. 속도는 index로 해결할 수 있다. 
색인이 있으면 검색이 빨라진다. 
속도는 read할때의 속도를 체크하면 된다.

기본키 ; 인덱스도 형성하고 유일하게 식별하는 기능고 같고있다.
튜플을 유일하게 식별할수 있는기능 & index에 속도를 향상하는 가능

튜플일 유일하게 식별하는것은 갱신 이상 / 삭제 이상을 줄일수 있다.

1. 튜플을 유일하게 식별할 수 있다.
2. 속조 향상
index가 형성
id로 검색하면 속도가 빨라질수 있다는 특징, 이름/주소로 검색하면 무용지물.

일반적으로 테이블단 index하나 만든다, index가 많으면 그리 좋지않다.
적당히 만들어라 (테이블당 1개)

중복된 데이터가 이상핸상을 유발한다.

설계시 고려상황: 
1. 이상현상 ---> 유일성 ***
	   ---> 데이터의 중복. (중복을 최소화) ---> 테이블 분리로 해결. ---> 테이블을 분리하면 되다.
테이블을 분리하는 전문용어가 : 정규화를 진행한다고 한다.


개시글 테이블 / 댓글 테이블로 분리.


외래키xxx는 기본키xxx를 참조한다....

외래키는 car테이블이 같고 있다.
외레키 설정은 car 태이블에서 해야한다.

외레키 테이블 분리하고 단서를 남기기위해.

외래키 
자식릴레이션 : car 자식	외래키
부모릴레이션 : member 부모	   참조대상

자식릴레이션에 지정된 외래키가 부모릴레이션의 특정 컬럼을 참조한다.
컬럼 to 컬럼.

한사람이 여러대 차를 보여할 경우.
그 사람의 id 이름 전번은 같다, 카번를 업력할때마다 굳이 데이터를 중복하게 입려할 필요가 없으니, 테이블을 분리한것이다.

부모릴레이션을 먼저 만들어야한다.
자식 릴레이션의 외래키 컬럼은 unique하지 않아도 된다.

키본키는 테이블당 1개만 설정할 수 있다.

이론이 강해야실력이 는다.










------------------------------------------------------------------------------
이렇게 테이블을 설계한다면,
c동작일때는 이떤 오류가 생갈수 있다. 삽입이상
r
u : 갱신이상
d : 삭제아상


2. 외레키 :


======================================================
기본키 생성 방법:
1. create table 문 사용 : 
constraint 지정한 키본키의 이름 primary key 기본키로 지정할 컬럼명.

create table member(
	id varchar2(8) not null.
	name varchar2(10) not null,
	tel varchar2(13) not null,
	CONSTRAINT member_pk PRIMARY KEY (id)
);

2. alter table 문 사용 : 
alter table 테이블명 add constraint 지정한 기본키의 이름 primary key 기본키로 지정할 컬럼명.




기본키 : 튜플(row0)을 유일하게 식별, 기본키로 index(색인)를 형성하여 저장한다.

이름 전번 카번호

---> id 이름 전번 카번호 --- (pk)

---> id(pk) 이름 전번              카번호 id(fk) --- 외레키(fk)









